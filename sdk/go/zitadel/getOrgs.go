// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zitadel

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
	"github.com/pulumiverse/pulumi-zitadel/sdk/go/zitadel/internal"
)

// Datasource representing an organization in ZITADEL, which is the highest level after the instance and contains several other resource including policies if the configuration differs to the default policies on the instance.
func GetOrgs(ctx *pulumi.Context, args *GetOrgsArgs, opts ...pulumi.InvokeOption) (*GetOrgsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetOrgsResult
	err := ctx.Invoke("zitadel:index/getOrgs:getOrgs", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOrgs.
type GetOrgsArgs struct {
	// A domain of the org.
	Domain *string `pulumi:"domain"`
	// Method for querying orgs by domain, supported values: TEXT*QUERY*METHOD*EQUALS, TEXT*QUERY*METHOD*EQUALS*IGNORE*CASE, TEXT*QUERY*METHOD*STARTS*WITH, TEXT*QUERY*METHOD*STARTS*WITH*IGNORE*CASE, TEXT*QUERY*METHOD*CONTAINS, TEXT*QUERY*METHOD*CONTAINS*IGNORE*CASE, TEXT*QUERY*METHOD*ENDS*WITH, TEXT*QUERY*METHOD*ENDS*WITH*IGNORE*CASE
	DomainMethod *string `pulumi:"domainMethod"`
	// Name of the org.
	Name *string `pulumi:"name"`
	// Method for querying orgs by name, supported values: TEXT*QUERY*METHOD*EQUALS, TEXT*QUERY*METHOD*EQUALS*IGNORE*CASE, TEXT*QUERY*METHOD*STARTS*WITH, TEXT*QUERY*METHOD*STARTS*WITH*IGNORE*CASE, TEXT*QUERY*METHOD*CONTAINS, TEXT*QUERY*METHOD*CONTAINS*IGNORE*CASE, TEXT*QUERY*METHOD*ENDS*WITH, TEXT*QUERY*METHOD*ENDS*WITH*IGNORE*CASE
	NameMethod *string `pulumi:"nameMethod"`
	// State of the org, supported values: ORG*STATE*UNSPECIFIED, ORG*STATE*ACTIVE, ORG*STATE*INACTIVE, ORG*STATE*REMOVED
	State *string `pulumi:"state"`
}

// A collection of values returned by getOrgs.
type GetOrgsResult struct {
	// A domain of the org.
	Domain *string `pulumi:"domain"`
	// Method for querying orgs by domain, supported values: TEXT*QUERY*METHOD*EQUALS, TEXT*QUERY*METHOD*EQUALS*IGNORE*CASE, TEXT*QUERY*METHOD*STARTS*WITH, TEXT*QUERY*METHOD*STARTS*WITH*IGNORE*CASE, TEXT*QUERY*METHOD*CONTAINS, TEXT*QUERY*METHOD*CONTAINS*IGNORE*CASE, TEXT*QUERY*METHOD*ENDS*WITH, TEXT*QUERY*METHOD*ENDS*WITH*IGNORE*CASE
	DomainMethod *string `pulumi:"domainMethod"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A set of all organization IDs.
	Ids []string `pulumi:"ids"`
	// Name of the org.
	Name *string `pulumi:"name"`
	// Method for querying orgs by name, supported values: TEXT*QUERY*METHOD*EQUALS, TEXT*QUERY*METHOD*EQUALS*IGNORE*CASE, TEXT*QUERY*METHOD*STARTS*WITH, TEXT*QUERY*METHOD*STARTS*WITH*IGNORE*CASE, TEXT*QUERY*METHOD*CONTAINS, TEXT*QUERY*METHOD*CONTAINS*IGNORE*CASE, TEXT*QUERY*METHOD*ENDS*WITH, TEXT*QUERY*METHOD*ENDS*WITH*IGNORE*CASE
	NameMethod *string `pulumi:"nameMethod"`
	// Primary domain of the org
	PrimaryDomain string `pulumi:"primaryDomain"`
	// State of the org, supported values: ORG*STATE*UNSPECIFIED, ORG*STATE*ACTIVE, ORG*STATE*INACTIVE, ORG*STATE*REMOVED
	State *string `pulumi:"state"`
}

func GetOrgsOutput(ctx *pulumi.Context, args GetOrgsOutputArgs, opts ...pulumi.InvokeOption) GetOrgsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetOrgsResult, error) {
			args := v.(GetOrgsArgs)
			r, err := GetOrgs(ctx, &args, opts...)
			var s GetOrgsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetOrgsResultOutput)
}

// A collection of arguments for invoking getOrgs.
type GetOrgsOutputArgs struct {
	// A domain of the org.
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// Method for querying orgs by domain, supported values: TEXT*QUERY*METHOD*EQUALS, TEXT*QUERY*METHOD*EQUALS*IGNORE*CASE, TEXT*QUERY*METHOD*STARTS*WITH, TEXT*QUERY*METHOD*STARTS*WITH*IGNORE*CASE, TEXT*QUERY*METHOD*CONTAINS, TEXT*QUERY*METHOD*CONTAINS*IGNORE*CASE, TEXT*QUERY*METHOD*ENDS*WITH, TEXT*QUERY*METHOD*ENDS*WITH*IGNORE*CASE
	DomainMethod pulumi.StringPtrInput `pulumi:"domainMethod"`
	// Name of the org.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Method for querying orgs by name, supported values: TEXT*QUERY*METHOD*EQUALS, TEXT*QUERY*METHOD*EQUALS*IGNORE*CASE, TEXT*QUERY*METHOD*STARTS*WITH, TEXT*QUERY*METHOD*STARTS*WITH*IGNORE*CASE, TEXT*QUERY*METHOD*CONTAINS, TEXT*QUERY*METHOD*CONTAINS*IGNORE*CASE, TEXT*QUERY*METHOD*ENDS*WITH, TEXT*QUERY*METHOD*ENDS*WITH*IGNORE*CASE
	NameMethod pulumi.StringPtrInput `pulumi:"nameMethod"`
	// State of the org, supported values: ORG*STATE*UNSPECIFIED, ORG*STATE*ACTIVE, ORG*STATE*INACTIVE, ORG*STATE*REMOVED
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetOrgsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgsArgs)(nil)).Elem()
}

// A collection of values returned by getOrgs.
type GetOrgsResultOutput struct{ *pulumi.OutputState }

func (GetOrgsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgsResult)(nil)).Elem()
}

func (o GetOrgsResultOutput) ToGetOrgsResultOutput() GetOrgsResultOutput {
	return o
}

func (o GetOrgsResultOutput) ToGetOrgsResultOutputWithContext(ctx context.Context) GetOrgsResultOutput {
	return o
}

func (o GetOrgsResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetOrgsResult] {
	return pulumix.Output[GetOrgsResult]{
		OutputState: o.OutputState,
	}
}

// A domain of the org.
func (o GetOrgsResultOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetOrgsResult) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// Method for querying orgs by domain, supported values: TEXT*QUERY*METHOD*EQUALS, TEXT*QUERY*METHOD*EQUALS*IGNORE*CASE, TEXT*QUERY*METHOD*STARTS*WITH, TEXT*QUERY*METHOD*STARTS*WITH*IGNORE*CASE, TEXT*QUERY*METHOD*CONTAINS, TEXT*QUERY*METHOD*CONTAINS*IGNORE*CASE, TEXT*QUERY*METHOD*ENDS*WITH, TEXT*QUERY*METHOD*ENDS*WITH*IGNORE*CASE
func (o GetOrgsResultOutput) DomainMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetOrgsResult) *string { return v.DomainMethod }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetOrgsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgsResult) string { return v.Id }).(pulumi.StringOutput)
}

// A set of all organization IDs.
func (o GetOrgsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOrgsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

// Name of the org.
func (o GetOrgsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetOrgsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Method for querying orgs by name, supported values: TEXT*QUERY*METHOD*EQUALS, TEXT*QUERY*METHOD*EQUALS*IGNORE*CASE, TEXT*QUERY*METHOD*STARTS*WITH, TEXT*QUERY*METHOD*STARTS*WITH*IGNORE*CASE, TEXT*QUERY*METHOD*CONTAINS, TEXT*QUERY*METHOD*CONTAINS*IGNORE*CASE, TEXT*QUERY*METHOD*ENDS*WITH, TEXT*QUERY*METHOD*ENDS*WITH*IGNORE*CASE
func (o GetOrgsResultOutput) NameMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetOrgsResult) *string { return v.NameMethod }).(pulumi.StringPtrOutput)
}

// Primary domain of the org
func (o GetOrgsResultOutput) PrimaryDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgsResult) string { return v.PrimaryDomain }).(pulumi.StringOutput)
}

// State of the org, supported values: ORG*STATE*UNSPECIFIED, ORG*STATE*ACTIVE, ORG*STATE*INACTIVE, ORG*STATE*REMOVED
func (o GetOrgsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetOrgsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetOrgsResultOutput{})
}
