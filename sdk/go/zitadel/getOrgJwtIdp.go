// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zitadel

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
	"github.com/pulumiverse/pulumi-zitadel/sdk/go/zitadel/internal"
)

// Datasource representing a generic JWT IdP on the organization.
func GetOrgJwtIdp(ctx *pulumi.Context, args *GetOrgJwtIdpArgs, opts ...pulumi.InvokeOption) (*GetOrgJwtIdpResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetOrgJwtIdpResult
	err := ctx.Invoke("zitadel:index/getOrgJwtIdp:getOrgJwtIdp", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOrgJwtIdp.
type GetOrgJwtIdpArgs struct {
	// The ID of this resource.
	IdpId string `pulumi:"idpId"`
	// ID of the organization
	OrgId string `pulumi:"orgId"`
}

// A collection of values returned by getOrgJwtIdp.
type GetOrgJwtIdpResult struct {
	// auto register for users from this idp
	AutoRegister bool `pulumi:"autoRegister"`
	// the name of the header where the JWT is sent in, default is authorization
	HeaderName string `pulumi:"headerName"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The ID of this resource.
	IdpId string `pulumi:"idpId"`
	// the issuer of the jwt (for validation)
	Issuer string `pulumi:"issuer"`
	// the endpoint where the jwt can be extracted
	JwtEndpoint string `pulumi:"jwtEndpoint"`
	// the endpoint to the key (JWK) which are used to sign the JWT with
	KeysEndpoint string `pulumi:"keysEndpoint"`
	// Name of the IDP
	Name string `pulumi:"name"`
	// ID of the organization
	OrgId string `pulumi:"orgId"`
	// Some identity providers specify the styling of the button to their login
	StylingType string `pulumi:"stylingType"`
}

func GetOrgJwtIdpOutput(ctx *pulumi.Context, args GetOrgJwtIdpOutputArgs, opts ...pulumi.InvokeOption) GetOrgJwtIdpResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetOrgJwtIdpResult, error) {
			args := v.(GetOrgJwtIdpArgs)
			r, err := GetOrgJwtIdp(ctx, &args, opts...)
			var s GetOrgJwtIdpResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetOrgJwtIdpResultOutput)
}

// A collection of arguments for invoking getOrgJwtIdp.
type GetOrgJwtIdpOutputArgs struct {
	// The ID of this resource.
	IdpId pulumi.StringInput `pulumi:"idpId"`
	// ID of the organization
	OrgId pulumi.StringInput `pulumi:"orgId"`
}

func (GetOrgJwtIdpOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgJwtIdpArgs)(nil)).Elem()
}

// A collection of values returned by getOrgJwtIdp.
type GetOrgJwtIdpResultOutput struct{ *pulumi.OutputState }

func (GetOrgJwtIdpResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgJwtIdpResult)(nil)).Elem()
}

func (o GetOrgJwtIdpResultOutput) ToGetOrgJwtIdpResultOutput() GetOrgJwtIdpResultOutput {
	return o
}

func (o GetOrgJwtIdpResultOutput) ToGetOrgJwtIdpResultOutputWithContext(ctx context.Context) GetOrgJwtIdpResultOutput {
	return o
}

func (o GetOrgJwtIdpResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetOrgJwtIdpResult] {
	return pulumix.Output[GetOrgJwtIdpResult]{
		OutputState: o.OutputState,
	}
}

// auto register for users from this idp
func (o GetOrgJwtIdpResultOutput) AutoRegister() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOrgJwtIdpResult) bool { return v.AutoRegister }).(pulumi.BoolOutput)
}

// the name of the header where the JWT is sent in, default is authorization
func (o GetOrgJwtIdpResultOutput) HeaderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgJwtIdpResult) string { return v.HeaderName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetOrgJwtIdpResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgJwtIdpResult) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of this resource.
func (o GetOrgJwtIdpResultOutput) IdpId() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgJwtIdpResult) string { return v.IdpId }).(pulumi.StringOutput)
}

// the issuer of the jwt (for validation)
func (o GetOrgJwtIdpResultOutput) Issuer() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgJwtIdpResult) string { return v.Issuer }).(pulumi.StringOutput)
}

// the endpoint where the jwt can be extracted
func (o GetOrgJwtIdpResultOutput) JwtEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgJwtIdpResult) string { return v.JwtEndpoint }).(pulumi.StringOutput)
}

// the endpoint to the key (JWK) which are used to sign the JWT with
func (o GetOrgJwtIdpResultOutput) KeysEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgJwtIdpResult) string { return v.KeysEndpoint }).(pulumi.StringOutput)
}

// Name of the IDP
func (o GetOrgJwtIdpResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgJwtIdpResult) string { return v.Name }).(pulumi.StringOutput)
}

// ID of the organization
func (o GetOrgJwtIdpResultOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgJwtIdpResult) string { return v.OrgId }).(pulumi.StringOutput)
}

// Some identity providers specify the styling of the button to their login
func (o GetOrgJwtIdpResultOutput) StylingType() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgJwtIdpResult) string { return v.StylingType }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetOrgJwtIdpResultOutput{})
}
