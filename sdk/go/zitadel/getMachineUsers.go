// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zitadel

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
	"github.com/pulumiverse/pulumi-zitadel/sdk/go/zitadel/internal"
)

// Datasource representing a serviceaccount situated under an organization, which then can be authorized through memberships or direct grants on other resources.
func GetMachineUsers(ctx *pulumi.Context, args *GetMachineUsersArgs, opts ...pulumi.InvokeOption) (*GetMachineUsersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetMachineUsersResult
	err := ctx.Invoke("zitadel:index/getMachineUsers:getMachineUsers", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMachineUsers.
type GetMachineUsersArgs struct {
	// ID of the organization
	OrgId *string `pulumi:"orgId"`
	// Username
	UserName string `pulumi:"userName"`
	// Method for querying machine users by username, supported values: TEXT*QUERY*METHOD*EQUALS, TEXT*QUERY*METHOD*EQUALS*IGNORE*CASE, TEXT*QUERY*METHOD*STARTS*WITH, TEXT*QUERY*METHOD*STARTS*WITH*IGNORE*CASE, TEXT*QUERY*METHOD*CONTAINS, TEXT*QUERY*METHOD*CONTAINS*IGNORE*CASE, TEXT*QUERY*METHOD*ENDS*WITH, TEXT*QUERY*METHOD*ENDS*WITH*IGNORE*CASE
	UserNameMethod *string `pulumi:"userNameMethod"`
}

// A collection of values returned by getMachineUsers.
type GetMachineUsersResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// ID of the organization
	OrgId *string `pulumi:"orgId"`
	// A set of all IDs.
	UserIds []string `pulumi:"userIds"`
	// Username
	UserName string `pulumi:"userName"`
	// Method for querying machine users by username, supported values: TEXT*QUERY*METHOD*EQUALS, TEXT*QUERY*METHOD*EQUALS*IGNORE*CASE, TEXT*QUERY*METHOD*STARTS*WITH, TEXT*QUERY*METHOD*STARTS*WITH*IGNORE*CASE, TEXT*QUERY*METHOD*CONTAINS, TEXT*QUERY*METHOD*CONTAINS*IGNORE*CASE, TEXT*QUERY*METHOD*ENDS*WITH, TEXT*QUERY*METHOD*ENDS*WITH*IGNORE*CASE
	UserNameMethod *string `pulumi:"userNameMethod"`
}

func GetMachineUsersOutput(ctx *pulumi.Context, args GetMachineUsersOutputArgs, opts ...pulumi.InvokeOption) GetMachineUsersResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetMachineUsersResult, error) {
			args := v.(GetMachineUsersArgs)
			r, err := GetMachineUsers(ctx, &args, opts...)
			var s GetMachineUsersResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetMachineUsersResultOutput)
}

// A collection of arguments for invoking getMachineUsers.
type GetMachineUsersOutputArgs struct {
	// ID of the organization
	OrgId pulumi.StringPtrInput `pulumi:"orgId"`
	// Username
	UserName pulumi.StringInput `pulumi:"userName"`
	// Method for querying machine users by username, supported values: TEXT*QUERY*METHOD*EQUALS, TEXT*QUERY*METHOD*EQUALS*IGNORE*CASE, TEXT*QUERY*METHOD*STARTS*WITH, TEXT*QUERY*METHOD*STARTS*WITH*IGNORE*CASE, TEXT*QUERY*METHOD*CONTAINS, TEXT*QUERY*METHOD*CONTAINS*IGNORE*CASE, TEXT*QUERY*METHOD*ENDS*WITH, TEXT*QUERY*METHOD*ENDS*WITH*IGNORE*CASE
	UserNameMethod pulumi.StringPtrInput `pulumi:"userNameMethod"`
}

func (GetMachineUsersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMachineUsersArgs)(nil)).Elem()
}

// A collection of values returned by getMachineUsers.
type GetMachineUsersResultOutput struct{ *pulumi.OutputState }

func (GetMachineUsersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMachineUsersResult)(nil)).Elem()
}

func (o GetMachineUsersResultOutput) ToGetMachineUsersResultOutput() GetMachineUsersResultOutput {
	return o
}

func (o GetMachineUsersResultOutput) ToGetMachineUsersResultOutputWithContext(ctx context.Context) GetMachineUsersResultOutput {
	return o
}

func (o GetMachineUsersResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetMachineUsersResult] {
	return pulumix.Output[GetMachineUsersResult]{
		OutputState: o.OutputState,
	}
}

// The provider-assigned unique ID for this managed resource.
func (o GetMachineUsersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMachineUsersResult) string { return v.Id }).(pulumi.StringOutput)
}

// ID of the organization
func (o GetMachineUsersResultOutput) OrgId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMachineUsersResult) *string { return v.OrgId }).(pulumi.StringPtrOutput)
}

// A set of all IDs.
func (o GetMachineUsersResultOutput) UserIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMachineUsersResult) []string { return v.UserIds }).(pulumi.StringArrayOutput)
}

// Username
func (o GetMachineUsersResultOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMachineUsersResult) string { return v.UserName }).(pulumi.StringOutput)
}

// Method for querying machine users by username, supported values: TEXT*QUERY*METHOD*EQUALS, TEXT*QUERY*METHOD*EQUALS*IGNORE*CASE, TEXT*QUERY*METHOD*STARTS*WITH, TEXT*QUERY*METHOD*STARTS*WITH*IGNORE*CASE, TEXT*QUERY*METHOD*CONTAINS, TEXT*QUERY*METHOD*CONTAINS*IGNORE*CASE, TEXT*QUERY*METHOD*ENDS*WITH, TEXT*QUERY*METHOD*ENDS*WITH*IGNORE*CASE
func (o GetMachineUsersResultOutput) UserNameMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMachineUsersResult) *string { return v.UserNameMethod }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetMachineUsersResultOutput{})
}
