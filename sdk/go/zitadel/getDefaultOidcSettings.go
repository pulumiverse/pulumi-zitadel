// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zitadel

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
	"github.com/pulumiverse/pulumi-zitadel/sdk/go/zitadel/internal"
)

// Datasource representing the default oidc settings.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-zitadel/sdk/go/zitadel"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_default, err := zitadel.LookupDefaultOidcSettings(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("oidcSettings", _default)
//			return nil
//		})
//	}
//
// ```
func LookupDefaultOidcSettings(ctx *pulumi.Context, opts ...pulumi.InvokeOption) (*LookupDefaultOidcSettingsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDefaultOidcSettingsResult
	err := ctx.Invoke("zitadel:index/getDefaultOidcSettings:getDefaultOidcSettings", nil, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of values returned by getDefaultOidcSettings.
type LookupDefaultOidcSettingsResult struct {
	// lifetime duration of access tokens
	AccessTokenLifetime string `pulumi:"accessTokenLifetime"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// lifetime duration of id tokens
	IdTokenLifetime string `pulumi:"idTokenLifetime"`
	// expiration duration of refresh tokens
	RefreshTokenExpiration string `pulumi:"refreshTokenExpiration"`
	// expiration duration of idle refresh tokens
	RefreshTokenIdleExpiration string `pulumi:"refreshTokenIdleExpiration"`
}

func LookupDefaultOidcSettingsOutput(ctx *pulumi.Context, opts ...pulumi.InvokeOption) LookupDefaultOidcSettingsResultOutput {
	return pulumi.ToOutput(0).ApplyT(func(int) (LookupDefaultOidcSettingsResult, error) {
		r, err := LookupDefaultOidcSettings(ctx, opts...)
		var s LookupDefaultOidcSettingsResult
		if r != nil {
			s = *r
		}
		return s, err
	}).(LookupDefaultOidcSettingsResultOutput)
}

// A collection of values returned by getDefaultOidcSettings.
type LookupDefaultOidcSettingsResultOutput struct{ *pulumi.OutputState }

func (LookupDefaultOidcSettingsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDefaultOidcSettingsResult)(nil)).Elem()
}

func (o LookupDefaultOidcSettingsResultOutput) ToLookupDefaultOidcSettingsResultOutput() LookupDefaultOidcSettingsResultOutput {
	return o
}

func (o LookupDefaultOidcSettingsResultOutput) ToLookupDefaultOidcSettingsResultOutputWithContext(ctx context.Context) LookupDefaultOidcSettingsResultOutput {
	return o
}

func (o LookupDefaultOidcSettingsResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupDefaultOidcSettingsResult] {
	return pulumix.Output[LookupDefaultOidcSettingsResult]{
		OutputState: o.OutputState,
	}
}

// lifetime duration of access tokens
func (o LookupDefaultOidcSettingsResultOutput) AccessTokenLifetime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDefaultOidcSettingsResult) string { return v.AccessTokenLifetime }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupDefaultOidcSettingsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDefaultOidcSettingsResult) string { return v.Id }).(pulumi.StringOutput)
}

// lifetime duration of id tokens
func (o LookupDefaultOidcSettingsResultOutput) IdTokenLifetime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDefaultOidcSettingsResult) string { return v.IdTokenLifetime }).(pulumi.StringOutput)
}

// expiration duration of refresh tokens
func (o LookupDefaultOidcSettingsResultOutput) RefreshTokenExpiration() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDefaultOidcSettingsResult) string { return v.RefreshTokenExpiration }).(pulumi.StringOutput)
}

// expiration duration of idle refresh tokens
func (o LookupDefaultOidcSettingsResultOutput) RefreshTokenIdleExpiration() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDefaultOidcSettingsResult) string { return v.RefreshTokenIdleExpiration }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDefaultOidcSettingsResultOutput{})
}
