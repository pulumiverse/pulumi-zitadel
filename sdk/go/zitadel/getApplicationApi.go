// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zitadel

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Datasource representing an API application belonging to a project, with all configuration possibilities.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-zitadel/sdk/go/zitadel"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-zitadel/sdk/go/zitadel"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_default, err := zitadel.LookupApplicationApi(ctx, &GetApplicationApiArgs{
//				OrgId:     pulumi.StringRef(data.Zitadel_org.Default.Id),
//				ProjectId: data.Zitadel_project.Default.Id,
//				AppId:     "123456789012345678",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("applicationApi", _default)
//			return nil
//		})
//	}
//
// ```
func LookupApplicationApi(ctx *pulumi.Context, args *LookupApplicationApiArgs, opts ...pulumi.InvokeOption) (*LookupApplicationApiResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupApplicationApiResult
	err := ctx.Invoke("zitadel:index/getApplicationApi:getApplicationApi", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getApplicationApi.
type LookupApplicationApiArgs struct {
	// The ID of this resource.
	AppId string `pulumi:"appId"`
	// ID of the organization
	OrgId *string `pulumi:"orgId"`
	// ID of the project
	ProjectId string `pulumi:"projectId"`
}

// A collection of values returned by getApplicationApi.
type LookupApplicationApiResult struct {
	// The ID of this resource.
	AppId string `pulumi:"appId"`
	// Auth method type
	AuthMethodType string `pulumi:"authMethodType"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Name of the application
	Name string `pulumi:"name"`
	// ID of the organization
	OrgId *string `pulumi:"orgId"`
	// ID of the project
	ProjectId string `pulumi:"projectId"`
}

func LookupApplicationApiOutput(ctx *pulumi.Context, args LookupApplicationApiOutputArgs, opts ...pulumi.InvokeOption) LookupApplicationApiResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupApplicationApiResult, error) {
			args := v.(LookupApplicationApiArgs)
			r, err := LookupApplicationApi(ctx, &args, opts...)
			var s LookupApplicationApiResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupApplicationApiResultOutput)
}

// A collection of arguments for invoking getApplicationApi.
type LookupApplicationApiOutputArgs struct {
	// The ID of this resource.
	AppId pulumi.StringInput `pulumi:"appId"`
	// ID of the organization
	OrgId pulumi.StringPtrInput `pulumi:"orgId"`
	// ID of the project
	ProjectId pulumi.StringInput `pulumi:"projectId"`
}

func (LookupApplicationApiOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApplicationApiArgs)(nil)).Elem()
}

// A collection of values returned by getApplicationApi.
type LookupApplicationApiResultOutput struct{ *pulumi.OutputState }

func (LookupApplicationApiResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApplicationApiResult)(nil)).Elem()
}

func (o LookupApplicationApiResultOutput) ToLookupApplicationApiResultOutput() LookupApplicationApiResultOutput {
	return o
}

func (o LookupApplicationApiResultOutput) ToLookupApplicationApiResultOutputWithContext(ctx context.Context) LookupApplicationApiResultOutput {
	return o
}

// The ID of this resource.
func (o LookupApplicationApiResultOutput) AppId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApplicationApiResult) string { return v.AppId }).(pulumi.StringOutput)
}

// Auth method type
func (o LookupApplicationApiResultOutput) AuthMethodType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApplicationApiResult) string { return v.AuthMethodType }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupApplicationApiResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApplicationApiResult) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the application
func (o LookupApplicationApiResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApplicationApiResult) string { return v.Name }).(pulumi.StringOutput)
}

// ID of the organization
func (o LookupApplicationApiResultOutput) OrgId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationApiResult) *string { return v.OrgId }).(pulumi.StringPtrOutput)
}

// ID of the project
func (o LookupApplicationApiResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApplicationApiResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupApplicationApiResultOutput{})
}
