// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zitadel

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
	"github.com/pulumiverse/pulumi-zitadel/sdk/go/zitadel/internal"
)

// Datasource representing a SAML application belonging to a project, with all configuration possibilities.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-zitadel/sdk/go/zitadel"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := zitadel.LookupApplicationSaml(ctx, &zitadel.LookupApplicationSamlArgs{
//				OrgId:     pulumi.StringRef(data.Zitadel_org.Default.Id),
//				ProjectId: data.Zitadel_project.Default.Id,
//				AppId:     "123456789012345678",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupApplicationSaml(ctx *pulumi.Context, args *LookupApplicationSamlArgs, opts ...pulumi.InvokeOption) (*LookupApplicationSamlResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupApplicationSamlResult
	err := ctx.Invoke("zitadel:index/getApplicationSaml:getApplicationSaml", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getApplicationSaml.
type LookupApplicationSamlArgs struct {
	// The ID of this resource.
	AppId string `pulumi:"appId"`
	// ID of the organization
	OrgId *string `pulumi:"orgId"`
	// ID of the project
	ProjectId string `pulumi:"projectId"`
}

// A collection of values returned by getApplicationSaml.
type LookupApplicationSamlResult struct {
	// The ID of this resource.
	AppId string `pulumi:"appId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Metadata as XML file
	MetadataXml string `pulumi:"metadataXml"`
	// Name of the application
	Name string `pulumi:"name"`
	// ID of the organization
	OrgId *string `pulumi:"orgId"`
	// ID of the project
	ProjectId string `pulumi:"projectId"`
}

func LookupApplicationSamlOutput(ctx *pulumi.Context, args LookupApplicationSamlOutputArgs, opts ...pulumi.InvokeOption) LookupApplicationSamlResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupApplicationSamlResult, error) {
			args := v.(LookupApplicationSamlArgs)
			r, err := LookupApplicationSaml(ctx, &args, opts...)
			var s LookupApplicationSamlResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupApplicationSamlResultOutput)
}

// A collection of arguments for invoking getApplicationSaml.
type LookupApplicationSamlOutputArgs struct {
	// The ID of this resource.
	AppId pulumi.StringInput `pulumi:"appId"`
	// ID of the organization
	OrgId pulumi.StringPtrInput `pulumi:"orgId"`
	// ID of the project
	ProjectId pulumi.StringInput `pulumi:"projectId"`
}

func (LookupApplicationSamlOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApplicationSamlArgs)(nil)).Elem()
}

// A collection of values returned by getApplicationSaml.
type LookupApplicationSamlResultOutput struct{ *pulumi.OutputState }

func (LookupApplicationSamlResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApplicationSamlResult)(nil)).Elem()
}

func (o LookupApplicationSamlResultOutput) ToLookupApplicationSamlResultOutput() LookupApplicationSamlResultOutput {
	return o
}

func (o LookupApplicationSamlResultOutput) ToLookupApplicationSamlResultOutputWithContext(ctx context.Context) LookupApplicationSamlResultOutput {
	return o
}

func (o LookupApplicationSamlResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupApplicationSamlResult] {
	return pulumix.Output[LookupApplicationSamlResult]{
		OutputState: o.OutputState,
	}
}

// The ID of this resource.
func (o LookupApplicationSamlResultOutput) AppId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApplicationSamlResult) string { return v.AppId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupApplicationSamlResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApplicationSamlResult) string { return v.Id }).(pulumi.StringOutput)
}

// Metadata as XML file
func (o LookupApplicationSamlResultOutput) MetadataXml() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApplicationSamlResult) string { return v.MetadataXml }).(pulumi.StringOutput)
}

// Name of the application
func (o LookupApplicationSamlResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApplicationSamlResult) string { return v.Name }).(pulumi.StringOutput)
}

// ID of the organization
func (o LookupApplicationSamlResultOutput) OrgId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationSamlResult) *string { return v.OrgId }).(pulumi.StringPtrOutput)
}

// ID of the project
func (o LookupApplicationSamlResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApplicationSamlResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupApplicationSamlResultOutput{})
}
