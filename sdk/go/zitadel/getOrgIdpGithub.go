// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zitadel

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Datasource representing a GitHub IdP of the organization.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-zitadel/sdk/go/zitadel"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-zitadel/sdk/go/zitadel"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := zitadel.LookupOrgIdpGithub(ctx, &GetOrgIdpGithubArgs{
//				OrgId: pulumi.StringRef(data.Zitadel_org.Default.Id),
//				Id:    "123456789012345678",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupOrgIdpGithub(ctx *pulumi.Context, args *LookupOrgIdpGithubArgs, opts ...pulumi.InvokeOption) (*LookupOrgIdpGithubResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupOrgIdpGithubResult
	err := ctx.Invoke("zitadel:index/getOrgIdpGithub:getOrgIdpGithub", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOrgIdpGithub.
type LookupOrgIdpGithubArgs struct {
	// The ID of this resource.
	Id string `pulumi:"id"`
	// ID of the organization
	OrgId *string `pulumi:"orgId"`
}

// A collection of values returned by getOrgIdpGithub.
type LookupOrgIdpGithubResult struct {
	// client id generated by the identity provider
	ClientId string `pulumi:"clientId"`
	// client secret generated by the identity provider
	ClientSecret string `pulumi:"clientSecret"`
	// The ID of this resource.
	Id string `pulumi:"id"`
	// enabled if a new account in ZITADEL are created automatically on login with an external account
	IsAutoCreation bool `pulumi:"isAutoCreation"`
	// enabled if a the ZITADEL account fields are updated automatically on each login
	IsAutoUpdate bool `pulumi:"isAutoUpdate"`
	// enabled if users are able to create a new account in ZITADEL when using an external account
	IsCreationAllowed bool `pulumi:"isCreationAllowed"`
	// enabled if users are able to link an existing ZITADEL user with an external account
	IsLinkingAllowed bool `pulumi:"isLinkingAllowed"`
	// Name of the IDP
	Name string `pulumi:"name"`
	// ID of the organization
	OrgId *string `pulumi:"orgId"`
	// the scopes requested by ZITADEL during the request on the identity provider
	Scopes []string `pulumi:"scopes"`
}

func LookupOrgIdpGithubOutput(ctx *pulumi.Context, args LookupOrgIdpGithubOutputArgs, opts ...pulumi.InvokeOption) LookupOrgIdpGithubResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupOrgIdpGithubResult, error) {
			args := v.(LookupOrgIdpGithubArgs)
			r, err := LookupOrgIdpGithub(ctx, &args, opts...)
			var s LookupOrgIdpGithubResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupOrgIdpGithubResultOutput)
}

// A collection of arguments for invoking getOrgIdpGithub.
type LookupOrgIdpGithubOutputArgs struct {
	// The ID of this resource.
	Id pulumi.StringInput `pulumi:"id"`
	// ID of the organization
	OrgId pulumi.StringPtrInput `pulumi:"orgId"`
}

func (LookupOrgIdpGithubOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOrgIdpGithubArgs)(nil)).Elem()
}

// A collection of values returned by getOrgIdpGithub.
type LookupOrgIdpGithubResultOutput struct{ *pulumi.OutputState }

func (LookupOrgIdpGithubResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOrgIdpGithubResult)(nil)).Elem()
}

func (o LookupOrgIdpGithubResultOutput) ToLookupOrgIdpGithubResultOutput() LookupOrgIdpGithubResultOutput {
	return o
}

func (o LookupOrgIdpGithubResultOutput) ToLookupOrgIdpGithubResultOutputWithContext(ctx context.Context) LookupOrgIdpGithubResultOutput {
	return o
}

// client id generated by the identity provider
func (o LookupOrgIdpGithubResultOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrgIdpGithubResult) string { return v.ClientId }).(pulumi.StringOutput)
}

// client secret generated by the identity provider
func (o LookupOrgIdpGithubResultOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrgIdpGithubResult) string { return v.ClientSecret }).(pulumi.StringOutput)
}

// The ID of this resource.
func (o LookupOrgIdpGithubResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrgIdpGithubResult) string { return v.Id }).(pulumi.StringOutput)
}

// enabled if a new account in ZITADEL are created automatically on login with an external account
func (o LookupOrgIdpGithubResultOutput) IsAutoCreation() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupOrgIdpGithubResult) bool { return v.IsAutoCreation }).(pulumi.BoolOutput)
}

// enabled if a the ZITADEL account fields are updated automatically on each login
func (o LookupOrgIdpGithubResultOutput) IsAutoUpdate() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupOrgIdpGithubResult) bool { return v.IsAutoUpdate }).(pulumi.BoolOutput)
}

// enabled if users are able to create a new account in ZITADEL when using an external account
func (o LookupOrgIdpGithubResultOutput) IsCreationAllowed() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupOrgIdpGithubResult) bool { return v.IsCreationAllowed }).(pulumi.BoolOutput)
}

// enabled if users are able to link an existing ZITADEL user with an external account
func (o LookupOrgIdpGithubResultOutput) IsLinkingAllowed() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupOrgIdpGithubResult) bool { return v.IsLinkingAllowed }).(pulumi.BoolOutput)
}

// Name of the IDP
func (o LookupOrgIdpGithubResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrgIdpGithubResult) string { return v.Name }).(pulumi.StringOutput)
}

// ID of the organization
func (o LookupOrgIdpGithubResultOutput) OrgId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupOrgIdpGithubResult) *string { return v.OrgId }).(pulumi.StringPtrOutput)
}

// the scopes requested by ZITADEL during the request on the identity provider
func (o LookupOrgIdpGithubResultOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupOrgIdpGithubResult) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupOrgIdpGithubResultOutput{})
}
