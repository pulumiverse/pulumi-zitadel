// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Zitadel
{
    /// <summary>
    /// Resource representing the default oidc settings.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Zitadel = Pulumiverse.Zitadel;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @default = new Zitadel.DefaultOidcSettings("default", new()
    ///     {
    ///         AccessTokenLifetime = "12h0m0s",
    ///         IdTokenLifetime = "12h0m0s",
    ///         RefreshTokenExpiration = "720h0m0s",
    ///         RefreshTokenIdleExpiration = "2160h0m0s",
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [ZitadelResourceType("zitadel:index/defaultOidcSettings:DefaultOidcSettings")]
    public partial class DefaultOidcSettings : global::Pulumi.CustomResource
    {
        /// <summary>
        /// lifetime duration of access tokens
        /// </summary>
        [Output("accessTokenLifetime")]
        public Output<string> AccessTokenLifetime { get; private set; } = null!;

        /// <summary>
        /// lifetime duration of id tokens
        /// </summary>
        [Output("idTokenLifetime")]
        public Output<string> IdTokenLifetime { get; private set; } = null!;

        /// <summary>
        /// expiration duration of refresh tokens
        /// </summary>
        [Output("refreshTokenExpiration")]
        public Output<string> RefreshTokenExpiration { get; private set; } = null!;

        /// <summary>
        /// expiration duration of idle refresh tokens
        /// </summary>
        [Output("refreshTokenIdleExpiration")]
        public Output<string> RefreshTokenIdleExpiration { get; private set; } = null!;


        /// <summary>
        /// Create a DefaultOidcSettings resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DefaultOidcSettings(string name, DefaultOidcSettingsArgs args, CustomResourceOptions? options = null)
            : base("zitadel:index/defaultOidcSettings:DefaultOidcSettings", name, args ?? new DefaultOidcSettingsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DefaultOidcSettings(string name, Input<string> id, DefaultOidcSettingsState? state = null, CustomResourceOptions? options = null)
            : base("zitadel:index/defaultOidcSettings:DefaultOidcSettings", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DefaultOidcSettings resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DefaultOidcSettings Get(string name, Input<string> id, DefaultOidcSettingsState? state = null, CustomResourceOptions? options = null)
        {
            return new DefaultOidcSettings(name, id, state, options);
        }
    }

    public sealed class DefaultOidcSettingsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// lifetime duration of access tokens
        /// </summary>
        [Input("accessTokenLifetime", required: true)]
        public Input<string> AccessTokenLifetime { get; set; } = null!;

        /// <summary>
        /// lifetime duration of id tokens
        /// </summary>
        [Input("idTokenLifetime", required: true)]
        public Input<string> IdTokenLifetime { get; set; } = null!;

        /// <summary>
        /// expiration duration of refresh tokens
        /// </summary>
        [Input("refreshTokenExpiration", required: true)]
        public Input<string> RefreshTokenExpiration { get; set; } = null!;

        /// <summary>
        /// expiration duration of idle refresh tokens
        /// </summary>
        [Input("refreshTokenIdleExpiration", required: true)]
        public Input<string> RefreshTokenIdleExpiration { get; set; } = null!;

        public DefaultOidcSettingsArgs()
        {
        }
        public static new DefaultOidcSettingsArgs Empty => new DefaultOidcSettingsArgs();
    }

    public sealed class DefaultOidcSettingsState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// lifetime duration of access tokens
        /// </summary>
        [Input("accessTokenLifetime")]
        public Input<string>? AccessTokenLifetime { get; set; }

        /// <summary>
        /// lifetime duration of id tokens
        /// </summary>
        [Input("idTokenLifetime")]
        public Input<string>? IdTokenLifetime { get; set; }

        /// <summary>
        /// expiration duration of refresh tokens
        /// </summary>
        [Input("refreshTokenExpiration")]
        public Input<string>? RefreshTokenExpiration { get; set; }

        /// <summary>
        /// expiration duration of idle refresh tokens
        /// </summary>
        [Input("refreshTokenIdleExpiration")]
        public Input<string>? RefreshTokenIdleExpiration { get; set; }

        public DefaultOidcSettingsState()
        {
        }
        public static new DefaultOidcSettingsState Empty => new DefaultOidcSettingsState();
    }
}
