// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Zitadel
{
    public static class GetMachineUsers
    {
        /// <summary>
        /// Datasource representing a serviceaccount situated under an organization, which then can be authorized through memberships or direct grants on other resources.
        /// </summary>
        public static Task<GetMachineUsersResult> InvokeAsync(GetMachineUsersArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMachineUsersResult>("zitadel:index/getMachineUsers:getMachineUsers", args ?? new GetMachineUsersArgs(), options.WithDefaults());

        /// <summary>
        /// Datasource representing a serviceaccount situated under an organization, which then can be authorized through memberships or direct grants on other resources.
        /// </summary>
        public static Output<GetMachineUsersResult> Invoke(GetMachineUsersInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMachineUsersResult>("zitadel:index/getMachineUsers:getMachineUsers", args ?? new GetMachineUsersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMachineUsersArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the organization
        /// </summary>
        [Input("orgId")]
        public string? OrgId { get; set; }

        /// <summary>
        /// Username
        /// </summary>
        [Input("userName", required: true)]
        public string UserName { get; set; } = null!;

        /// <summary>
        /// Method for querying machine users by username, supported values: TEXT*QUERY*METHOD*EQUALS, TEXT*QUERY*METHOD*EQUALS*IGNORE*CASE, TEXT*QUERY*METHOD*STARTS*WITH, TEXT*QUERY*METHOD*STARTS*WITH*IGNORE*CASE, TEXT*QUERY*METHOD*CONTAINS, TEXT*QUERY*METHOD*CONTAINS*IGNORE*CASE, TEXT*QUERY*METHOD*ENDS*WITH, TEXT*QUERY*METHOD*ENDS*WITH*IGNORE*CASE
        /// </summary>
        [Input("userNameMethod")]
        public string? UserNameMethod { get; set; }

        public GetMachineUsersArgs()
        {
        }
        public static new GetMachineUsersArgs Empty => new GetMachineUsersArgs();
    }

    public sealed class GetMachineUsersInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the organization
        /// </summary>
        [Input("orgId")]
        public Input<string>? OrgId { get; set; }

        /// <summary>
        /// Username
        /// </summary>
        [Input("userName", required: true)]
        public Input<string> UserName { get; set; } = null!;

        /// <summary>
        /// Method for querying machine users by username, supported values: TEXT*QUERY*METHOD*EQUALS, TEXT*QUERY*METHOD*EQUALS*IGNORE*CASE, TEXT*QUERY*METHOD*STARTS*WITH, TEXT*QUERY*METHOD*STARTS*WITH*IGNORE*CASE, TEXT*QUERY*METHOD*CONTAINS, TEXT*QUERY*METHOD*CONTAINS*IGNORE*CASE, TEXT*QUERY*METHOD*ENDS*WITH, TEXT*QUERY*METHOD*ENDS*WITH*IGNORE*CASE
        /// </summary>
        [Input("userNameMethod")]
        public Input<string>? UserNameMethod { get; set; }

        public GetMachineUsersInvokeArgs()
        {
        }
        public static new GetMachineUsersInvokeArgs Empty => new GetMachineUsersInvokeArgs();
    }


    [OutputType]
    public sealed class GetMachineUsersResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// ID of the organization
        /// </summary>
        public readonly string? OrgId;
        /// <summary>
        /// A set of all IDs.
        /// </summary>
        public readonly ImmutableArray<string> UserIds;
        /// <summary>
        /// Username
        /// </summary>
        public readonly string UserName;
        /// <summary>
        /// Method for querying machine users by username, supported values: TEXT*QUERY*METHOD*EQUALS, TEXT*QUERY*METHOD*EQUALS*IGNORE*CASE, TEXT*QUERY*METHOD*STARTS*WITH, TEXT*QUERY*METHOD*STARTS*WITH*IGNORE*CASE, TEXT*QUERY*METHOD*CONTAINS, TEXT*QUERY*METHOD*CONTAINS*IGNORE*CASE, TEXT*QUERY*METHOD*ENDS*WITH, TEXT*QUERY*METHOD*ENDS*WITH*IGNORE*CASE
        /// </summary>
        public readonly string? UserNameMethod;

        [OutputConstructor]
        private GetMachineUsersResult(
            string id,

            string? orgId,

            ImmutableArray<string> userIds,

            string userName,

            string? userNameMethod)
        {
            Id = id;
            OrgId = orgId;
            UserIds = userIds;
            UserName = userName;
            UserNameMethod = userNameMethod;
        }
    }
}
