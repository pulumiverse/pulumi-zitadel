// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Zitadel
{
    public static class GetMachineUser
    {
        /// <summary>
        /// Datasource representing a serviceaccount situated under an organization, which then can be authorized through memberships or direct grants on other resources.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Zitadel = Pulumi.Zitadel;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Zitadel.GetMachineUser.Invoke(new()
        ///     {
        ///         OrgId = data.Zitadel_org.Default.Id,
        ///         UserId = "123456789012345678",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetMachineUserResult> InvokeAsync(GetMachineUserArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMachineUserResult>("zitadel:index/getMachineUser:getMachineUser", args ?? new GetMachineUserArgs(), options.WithDefaults());

        /// <summary>
        /// Datasource representing a serviceaccount situated under an organization, which then can be authorized through memberships or direct grants on other resources.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Zitadel = Pulumi.Zitadel;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Zitadel.GetMachineUser.Invoke(new()
        ///     {
        ///         OrgId = data.Zitadel_org.Default.Id,
        ///         UserId = "123456789012345678",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetMachineUserResult> Invoke(GetMachineUserInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMachineUserResult>("zitadel:index/getMachineUser:getMachineUser", args ?? new GetMachineUserInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMachineUserArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the organization
        /// </summary>
        [Input("orgId")]
        public string? OrgId { get; set; }

        /// <summary>
        /// The ID of this resource.
        /// </summary>
        [Input("userId", required: true)]
        public string UserId { get; set; } = null!;

        public GetMachineUserArgs()
        {
        }
        public static new GetMachineUserArgs Empty => new GetMachineUserArgs();
    }

    public sealed class GetMachineUserInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the organization
        /// </summary>
        [Input("orgId")]
        public Input<string>? OrgId { get; set; }

        /// <summary>
        /// The ID of this resource.
        /// </summary>
        [Input("userId", required: true)]
        public Input<string> UserId { get; set; } = null!;

        public GetMachineUserInvokeArgs()
        {
        }
        public static new GetMachineUserInvokeArgs Empty => new GetMachineUserInvokeArgs();
    }


    [OutputType]
    public sealed class GetMachineUserResult
    {
        /// <summary>
        /// Access token type
        /// </summary>
        public readonly string AccessTokenType;
        /// <summary>
        /// Description of the user
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Loginnames
        /// </summary>
        public readonly ImmutableArray<string> LoginNames;
        /// <summary>
        /// Name of the machine user
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// ID of the organization
        /// </summary>
        public readonly string? OrgId;
        /// <summary>
        /// Preferred login name
        /// </summary>
        public readonly string PreferredLoginName;
        /// <summary>
        /// State of the user
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The ID of this resource.
        /// </summary>
        public readonly string UserId;
        /// <summary>
        /// Username
        /// </summary>
        public readonly string UserName;

        [OutputConstructor]
        private GetMachineUserResult(
            string accessTokenType,

            string description,

            string id,

            ImmutableArray<string> loginNames,

            string name,

            string? orgId,

            string preferredLoginName,

            string state,

            string userId,

            string userName)
        {
            AccessTokenType = accessTokenType;
            Description = description;
            Id = id;
            LoginNames = loginNames;
            Name = name;
            OrgId = orgId;
            PreferredLoginName = preferredLoginName;
            State = state;
            UserId = userId;
            UserName = userName;
        }
    }
}
