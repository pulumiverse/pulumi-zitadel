// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Datasource representing an organization in ZITADEL, which is the highest level after the instance and contains several other resource including policies if the configuration differs to the default policies on the instance.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zitadel from "@pulumi/zitadel";
 *
 * const default = zitadel.getOrg({
 *     id: "123456789012345678",
 * });
 * export const org = _default;
 * ```
 */
export function getOrg(args: GetOrgArgs, opts?: pulumi.InvokeOptions): Promise<GetOrgResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("zitadel:index/getOrg:getOrg", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getOrg.
 */
export interface GetOrgArgs {
    /**
     * ID of the organization
     */
    id: string;
}

/**
 * A collection of values returned by getOrg.
 */
export interface GetOrgResult {
    /**
     * ID of the organization
     */
    readonly id: string;
    /**
     * Name of the org.
     */
    readonly name: string;
    /**
     * Primary domain of the org
     */
    readonly primaryDomain: string;
    /**
     * State of the org, supported values: ORG*STATE*UNSPECIFIED, ORG*STATE*ACTIVE, ORG*STATE*INACTIVE, ORG*STATE*REMOVED
     */
    readonly state: string;
}

export function getOrgOutput(args: GetOrgOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOrgResult> {
    return pulumi.output(args).apply(a => getOrg(a, opts))
}

/**
 * A collection of arguments for invoking getOrg.
 */
export interface GetOrgOutputArgs {
    /**
     * ID of the organization
     */
    id: pulumi.Input<string>;
}
