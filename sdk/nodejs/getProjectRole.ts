// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Datasource representing the project roles, which can be given as authorizations to users.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zitadel from "@pulumi/zitadel";
 *
 * const default = zitadel.getProjectRole({
 *     orgId: data.zitadel_org["default"].id,
 *     projectId: data.zitadel_project["default"].id,
 *     roleKey: "key",
 * });
 * export const projectRole = _default;
 * ```
 */
export function getProjectRole(args: GetProjectRoleArgs, opts?: pulumi.InvokeOptions): Promise<GetProjectRoleResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("zitadel:index/getProjectRole:getProjectRole", {
        "orgId": args.orgId,
        "projectId": args.projectId,
        "roleKey": args.roleKey,
    }, opts);
}

/**
 * A collection of arguments for invoking getProjectRole.
 */
export interface GetProjectRoleArgs {
    /**
     * ID of the organization
     */
    orgId: string;
    /**
     * ID of the project
     */
    projectId: string;
    /**
     * Key used for project role
     */
    roleKey: string;
}

/**
 * A collection of values returned by getProjectRole.
 */
export interface GetProjectRoleResult {
    /**
     * Name used for project role
     */
    readonly displayName: string;
    /**
     * Group used for project role
     */
    readonly group: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * ID of the organization
     */
    readonly orgId: string;
    /**
     * ID of the project
     */
    readonly projectId: string;
    /**
     * Key used for project role
     */
    readonly roleKey: string;
}

export function getProjectRoleOutput(args: GetProjectRoleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProjectRoleResult> {
    return pulumi.output(args).apply(a => getProjectRole(a, opts))
}

/**
 * A collection of arguments for invoking getProjectRole.
 */
export interface GetProjectRoleOutputArgs {
    /**
     * ID of the organization
     */
    orgId: pulumi.Input<string>;
    /**
     * ID of the project
     */
    projectId: pulumi.Input<string>;
    /**
     * Key used for project role
     */
    roleKey: pulumi.Input<string>;
}
