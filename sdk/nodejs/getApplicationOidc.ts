// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Datasource representing an OIDC application belonging to a project, with all configuration possibilities.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zitadel from "@pulumi/zitadel";
 *
 * const default = zitadel.getApplicationOidc({
 *     orgId: data.zitadel_org["default"].id,
 *     projectId: data.zitadel_project["default"].id,
 *     appId: "123456789012345678",
 * });
 * export const applicationOidc = _default;
 * ```
 */
export function getApplicationOidc(args: GetApplicationOidcArgs, opts?: pulumi.InvokeOptions): Promise<GetApplicationOidcResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zitadel:index/getApplicationOidc:getApplicationOidc", {
        "appId": args.appId,
        "orgId": args.orgId,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getApplicationOidc.
 */
export interface GetApplicationOidcArgs {
    /**
     * The ID of this resource.
     */
    appId: string;
    /**
     * ID of the organization
     */
    orgId?: string;
    /**
     * ID of the project
     */
    projectId: string;
}

/**
 * A collection of values returned by getApplicationOidc.
 */
export interface GetApplicationOidcResult {
    /**
     * Access token role assertion
     */
    readonly accessTokenRoleAssertion: boolean;
    /**
     * Access token type
     */
    readonly accessTokenType: string;
    /**
     * Additional origins
     */
    readonly additionalOrigins: string[];
    /**
     * The ID of this resource.
     */
    readonly appId: string;
    /**
     * App type
     */
    readonly appType: string;
    /**
     * Auth method type
     */
    readonly authMethodType: string;
    /**
     * Clockskew
     */
    readonly clockSkew: string;
    /**
     * Dev mode
     */
    readonly devMode: boolean;
    /**
     * Grant types
     */
    readonly grantTypes: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * ID token role assertion
     */
    readonly idTokenRoleAssertion: boolean;
    /**
     * Token userinfo assertion
     */
    readonly idTokenUserinfoAssertion: boolean;
    /**
     * Name of the application
     */
    readonly name: string;
    /**
     * ID of the organization
     */
    readonly orgId?: string;
    /**
     * Post logout redirect URIs
     */
    readonly postLogoutRedirectUris: string[];
    /**
     * ID of the project
     */
    readonly projectId: string;
    /**
     * RedirectURIs
     */
    readonly redirectUris: string[];
    /**
     * Response type
     */
    readonly responseTypes: string[];
    /**
     * Version
     */
    readonly version: string;
}
/**
 * Datasource representing an OIDC application belonging to a project, with all configuration possibilities.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zitadel from "@pulumi/zitadel";
 *
 * const default = zitadel.getApplicationOidc({
 *     orgId: data.zitadel_org["default"].id,
 *     projectId: data.zitadel_project["default"].id,
 *     appId: "123456789012345678",
 * });
 * export const applicationOidc = _default;
 * ```
 */
export function getApplicationOidcOutput(args: GetApplicationOidcOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApplicationOidcResult> {
    return pulumi.output(args).apply((a: any) => getApplicationOidc(a, opts))
}

/**
 * A collection of arguments for invoking getApplicationOidc.
 */
export interface GetApplicationOidcOutputArgs {
    /**
     * The ID of this resource.
     */
    appId: pulumi.Input<string>;
    /**
     * ID of the organization
     */
    orgId?: pulumi.Input<string>;
    /**
     * ID of the project
     */
    projectId: pulumi.Input<string>;
}
