// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Datasource representing an action belonging to an organization.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zitadel from "@pulumi/zitadel";
 *
 * const default = zitadel.getAction({
 *     orgId: data.zitadel_org["default"].id,
 *     actionId: "123456789012345678",
 * });
 * export const action = _default;
 * ```
 */
export function getAction(args: GetActionArgs, opts?: pulumi.InvokeOptions): Promise<GetActionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zitadel:index/getAction:getAction", {
        "actionId": args.actionId,
        "orgId": args.orgId,
    }, opts);
}

/**
 * A collection of arguments for invoking getAction.
 */
export interface GetActionArgs {
    /**
     * The ID of this resource.
     */
    actionId: string;
    /**
     * ID of the organization
     */
    orgId?: string;
}

/**
 * A collection of values returned by getAction.
 */
export interface GetActionResult {
    /**
     * The ID of this resource.
     */
    readonly actionId: string;
    /**
     * when true, the next action will be called even if this action fails
     */
    readonly allowedToFail: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    /**
     * ID of the organization
     */
    readonly orgId?: string;
    readonly script: string;
    /**
     * the state of the action
     */
    readonly state: number;
    /**
     * after which time the action will be terminated if not finished
     */
    readonly timeout: string;
}
/**
 * Datasource representing an action belonging to an organization.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zitadel from "@pulumi/zitadel";
 *
 * const default = zitadel.getAction({
 *     orgId: data.zitadel_org["default"].id,
 *     actionId: "123456789012345678",
 * });
 * export const action = _default;
 * ```
 */
export function getActionOutput(args: GetActionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetActionResult> {
    return pulumi.output(args).apply((a: any) => getAction(a, opts))
}

/**
 * A collection of arguments for invoking getAction.
 */
export interface GetActionOutputArgs {
    /**
     * The ID of this resource.
     */
    actionId: pulumi.Input<string>;
    /**
     * ID of the organization
     */
    orgId?: pulumi.Input<string>;
}
