// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Resource representing the default domain policy.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zitadel from "@pulumiverse/zitadel";
 *
 * const _default = new zitadel.DefaultDomainPolicy("default", {
 *     smtpSenderAddressMatchesInstanceDomain: true,
 *     userLoginMustBeDomain: false,
 *     validateOrgDomains: true,
 * });
 * ```
 *
 * ## Import
 *
 * terraform The resource can be imported using the ID format `<>`, e.g.
 *
 * ```sh
 *  $ pulumi import zitadel:index/defaultDomainPolicy:DefaultDomainPolicy imported ''
 * ```
 */
export class DefaultDomainPolicy extends pulumi.CustomResource {
    /**
     * Get an existing DefaultDomainPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DefaultDomainPolicyState, opts?: pulumi.CustomResourceOptions): DefaultDomainPolicy {
        return new DefaultDomainPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'zitadel:index/defaultDomainPolicy:DefaultDomainPolicy';

    /**
     * Returns true if the given object is an instance of DefaultDomainPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DefaultDomainPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DefaultDomainPolicy.__pulumiType;
    }

    public readonly smtpSenderAddressMatchesInstanceDomain!: pulumi.Output<boolean>;
    /**
     * User login must be domain
     */
    public readonly userLoginMustBeDomain!: pulumi.Output<boolean>;
    /**
     * Validate organization domains
     */
    public readonly validateOrgDomains!: pulumi.Output<boolean>;

    /**
     * Create a DefaultDomainPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DefaultDomainPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DefaultDomainPolicyArgs | DefaultDomainPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DefaultDomainPolicyState | undefined;
            resourceInputs["smtpSenderAddressMatchesInstanceDomain"] = state ? state.smtpSenderAddressMatchesInstanceDomain : undefined;
            resourceInputs["userLoginMustBeDomain"] = state ? state.userLoginMustBeDomain : undefined;
            resourceInputs["validateOrgDomains"] = state ? state.validateOrgDomains : undefined;
        } else {
            const args = argsOrState as DefaultDomainPolicyArgs | undefined;
            if ((!args || args.smtpSenderAddressMatchesInstanceDomain === undefined) && !opts.urn) {
                throw new Error("Missing required property 'smtpSenderAddressMatchesInstanceDomain'");
            }
            if ((!args || args.userLoginMustBeDomain === undefined) && !opts.urn) {
                throw new Error("Missing required property 'userLoginMustBeDomain'");
            }
            if ((!args || args.validateOrgDomains === undefined) && !opts.urn) {
                throw new Error("Missing required property 'validateOrgDomains'");
            }
            resourceInputs["smtpSenderAddressMatchesInstanceDomain"] = args ? args.smtpSenderAddressMatchesInstanceDomain : undefined;
            resourceInputs["userLoginMustBeDomain"] = args ? args.userLoginMustBeDomain : undefined;
            resourceInputs["validateOrgDomains"] = args ? args.validateOrgDomains : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DefaultDomainPolicy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DefaultDomainPolicy resources.
 */
export interface DefaultDomainPolicyState {
    smtpSenderAddressMatchesInstanceDomain?: pulumi.Input<boolean>;
    /**
     * User login must be domain
     */
    userLoginMustBeDomain?: pulumi.Input<boolean>;
    /**
     * Validate organization domains
     */
    validateOrgDomains?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a DefaultDomainPolicy resource.
 */
export interface DefaultDomainPolicyArgs {
    smtpSenderAddressMatchesInstanceDomain: pulumi.Input<boolean>;
    /**
     * User login must be domain
     */
    userLoginMustBeDomain: pulumi.Input<boolean>;
    /**
     * Validate organization domains
     */
    validateOrgDomains: pulumi.Input<boolean>;
}
