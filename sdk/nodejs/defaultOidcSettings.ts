// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Resource representing the default oidc settings.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zitadel from "@pulumiverse/zitadel";
 *
 * const _default = new zitadel.DefaultOidcSettings("default", {
 *     accessTokenLifetime: "12h0m0s",
 *     idTokenLifetime: "12h0m0s",
 *     refreshTokenExpiration: "720h0m0s",
 *     refreshTokenIdleExpiration: "2160h0m0s",
 * });
 * ```
 */
export class DefaultOidcSettings extends pulumi.CustomResource {
    /**
     * Get an existing DefaultOidcSettings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DefaultOidcSettingsState, opts?: pulumi.CustomResourceOptions): DefaultOidcSettings {
        return new DefaultOidcSettings(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'zitadel:index/defaultOidcSettings:DefaultOidcSettings';

    /**
     * Returns true if the given object is an instance of DefaultOidcSettings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DefaultOidcSettings {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DefaultOidcSettings.__pulumiType;
    }

    /**
     * lifetime duration of access tokens
     */
    public readonly accessTokenLifetime!: pulumi.Output<string>;
    /**
     * lifetime duration of id tokens
     */
    public readonly idTokenLifetime!: pulumi.Output<string>;
    /**
     * expiration duration of refresh tokens
     */
    public readonly refreshTokenExpiration!: pulumi.Output<string>;
    /**
     * expiration duration of idle refresh tokens
     */
    public readonly refreshTokenIdleExpiration!: pulumi.Output<string>;

    /**
     * Create a DefaultOidcSettings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DefaultOidcSettingsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DefaultOidcSettingsArgs | DefaultOidcSettingsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DefaultOidcSettingsState | undefined;
            resourceInputs["accessTokenLifetime"] = state ? state.accessTokenLifetime : undefined;
            resourceInputs["idTokenLifetime"] = state ? state.idTokenLifetime : undefined;
            resourceInputs["refreshTokenExpiration"] = state ? state.refreshTokenExpiration : undefined;
            resourceInputs["refreshTokenIdleExpiration"] = state ? state.refreshTokenIdleExpiration : undefined;
        } else {
            const args = argsOrState as DefaultOidcSettingsArgs | undefined;
            if ((!args || args.accessTokenLifetime === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accessTokenLifetime'");
            }
            if ((!args || args.idTokenLifetime === undefined) && !opts.urn) {
                throw new Error("Missing required property 'idTokenLifetime'");
            }
            if ((!args || args.refreshTokenExpiration === undefined) && !opts.urn) {
                throw new Error("Missing required property 'refreshTokenExpiration'");
            }
            if ((!args || args.refreshTokenIdleExpiration === undefined) && !opts.urn) {
                throw new Error("Missing required property 'refreshTokenIdleExpiration'");
            }
            resourceInputs["accessTokenLifetime"] = args ? args.accessTokenLifetime : undefined;
            resourceInputs["idTokenLifetime"] = args ? args.idTokenLifetime : undefined;
            resourceInputs["refreshTokenExpiration"] = args ? args.refreshTokenExpiration : undefined;
            resourceInputs["refreshTokenIdleExpiration"] = args ? args.refreshTokenIdleExpiration : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DefaultOidcSettings.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DefaultOidcSettings resources.
 */
export interface DefaultOidcSettingsState {
    /**
     * lifetime duration of access tokens
     */
    accessTokenLifetime?: pulumi.Input<string>;
    /**
     * lifetime duration of id tokens
     */
    idTokenLifetime?: pulumi.Input<string>;
    /**
     * expiration duration of refresh tokens
     */
    refreshTokenExpiration?: pulumi.Input<string>;
    /**
     * expiration duration of idle refresh tokens
     */
    refreshTokenIdleExpiration?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DefaultOidcSettings resource.
 */
export interface DefaultOidcSettingsArgs {
    /**
     * lifetime duration of access tokens
     */
    accessTokenLifetime: pulumi.Input<string>;
    /**
     * lifetime duration of id tokens
     */
    idTokenLifetime: pulumi.Input<string>;
    /**
     * expiration duration of refresh tokens
     */
    refreshTokenExpiration: pulumi.Input<string>;
    /**
     * expiration duration of idle refresh tokens
     */
    refreshTokenIdleExpiration: pulumi.Input<string>;
}
